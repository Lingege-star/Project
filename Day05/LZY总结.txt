git:
有两个仓库本地仓库和远程仓库
集中式： 只有一个远程仓库
git分为  工作空间  暂存区  地仓库 远程仓库
1.配置git的用户名 和邮箱   
配置用户名命令:
git config --global user.name "LZY"        
配置邮箱
git config --global user.email "@977148946@qq.com"      
查看用户名和邮箱是否已经配置过
git config user.name
git config user.email
顺序： 工作空间带到暂存区到本地仓库到远程仓库
git 初始化
git init
将工作空间里面的文件和文件夹都提交到暂存区    
git add .
将暂存区里面的文件提交到本地仓库
git commit -m "注释"                                            
查看状态的命令
通过一个命令查看提交的所有文件的状态  红色的代表未提交到暂存区   绿色代表已经提交到暂存区了但是没有提交到本地仓库     如果出现  On branch master   nothing to commit, working tree clean
代表已经提交完成了
git status
查看每次提交到本地仓库的版本号 版本号随机生成
git reflog 
回退到上一个版本  回退到上上个版本 
git reset --hard HEAD^+^
回退到某个具体的版本号      
git reset --hard 
实现一个功能提交一次，修复一个bug提交一次，提交一次写一个注释
关联远程仓库
生成ssh密钥(三下回车）
ssh-keygen -t rsa -C "floveandroid@sina.com"
git关联远程仓库命令
git remote add origin https://github.com/Thierry1/Android-H2003B.git
把本地仓库的项目提交到远程仓库
git push -u origin 分支名
拉取代码
git pull origin main(远程分支名) --allow-unrelated-histories
如果上面拉取代码的方式不行，只需要创建一个空目录 然后通过   
git clone https://github.com/Thierry1/Android-H2003B.git
命令 将远程仓库里面所有的文件 包括readme.md文件都下载到本地工作空间
然后把项目复制到这个目录里面，先提交到暂存区，再提交到本地仓库， 然后一并再提交到远程仓库
创建+切换分支：
git checkout –b 分支名
切换分支：
git checkout 分支名
查看分支：
git branch
创建分支：
git branch name
删除分支：
git branch –d name
切换到主分支然后合并子分支(合并时要先切换到主分支)
合并某分支到当前分支：git merge 子分支
第一天进公司时，先把远程仓库的分支克隆到本地  然后切换到子分支，然后在子分支里面写代码，修复bug   实现一个功能 提交到本地仓库一次，
晚上下班之前再切换到主分支，然后合并子分支，最后提交到远程仓库
上班时，先从远程仓库拉取代码，拉取到代码之后，再切换到子分支 然后一实现功能，修复bug 实现一个功能，提交本地仓库一次，晚上下班之间再切换到主分支，
然后合并子分支，最后提交到远程仓库
报错问题
fatal: repository 'https://github.com/HanHu0405/-.git/' not found
  解决办法
  git credential-manager uninstall
  git credential-manager install
  然后在执行git pull再次拉取然后输入账号密码，就可以正常使用了



适配：
全域罗盘  流量研究院（手机使用和分辨率的百分比）
屏幕适配   主流分辨率
品牌：
华为 vivo OPPO 三星 小米
分辨率： 分辨率越大屏幕越清晰
 1080*1920  720*1280  1080*2259  1080*2340  720*1440
单位：
  dp = dip 设备独立像素  不同设备有不同的效果 用在设置控件的宽高
  px (像素) 
  sp (缩放像素) 主要用于字体大小
  pt (磅) 1pt=1/72英寸
  dpi=(屏幕密度) 一英寸有多少个像素点

目录                密度(dpi)           分辨率
   xxxhdpi             640              
   xxhdpi @3x(3倍图)   480   3            1080*1920
   xhdpi  @2x(2倍图)   320   2            720*1280   768*1280
   hdpi                240   1.5          480*800    480*854
   mdpi   @1x(1倍图)   160   1            320*480 
   ldpi                120   0.75         240*320    240*400
   
  密度比   12 16 24 32 48 ----> 3:4:6:8:12 ----> 0.75 : 1 : 1.5 : 2 : 3

  美工切三套图标： @1x(1倍图)  @2x(2倍图)  @3x(3倍图)

3倍图放到mdpi里面会出现什么问题？
  高分辨率的图标放到低分辨的目录里面会出现什么问题？   图标会拉伸放大

  低分辨率的图标放到高分辨的目录里面会出现什么问题？   图标会压缩缩小

  drawable里面放入一些app切图图标资源    mipmap里面放入app的logo图标

  真实开发的时候：需要三套或者两套图  图标(放到对象的目录下)+背景图(一般放到drawable-hdpi下或者drawable-xhdpi下)


  图片格式 = .9.png(不管如何拉伸如何压缩都不会变形)  Button按钮纯色的背景图，标题栏的背景图
  做.9.png图片的时候 
左边的黑线：控制纵向拉伸区域  
上面的黑线：控制横向拉伸区域
右边的黑线：控制纵向内容显示区域  
下面的黑线：控制横向内容显示区域

  图片适配  

  布局适配(px适配，dp适配(最小宽度限定适配符)，今日头条适配方案)


分辨率和单位的关系
  在 mdpi  320*480分辨率下  1dp = 1px
  在 hdpi  480*800分辨率下  1dp = 1.5px
  在 xhdpi 720*1280分辨率下 1dp = 2px
  以此类推


主流分辨率：1080*1920  720*1280

蓝湖 账号和密码（app原型图，接口文档，需求文档）


美工问：原先你们公司是以哪个分辨率为基准做的原型图  一定要看下流量研究院中主流分辨率是多少，确定主流分辨率之后，告诉美工 之前公司是以这个主流分辨率为基准做的原型图


1.明确原型图的分辨率是多少
  根据原型图做布局适配

  原型图写在最前面

  1080*1920

在蓝湖中原型图上标注的有三种单位 三种单位可以切换：px dp pt (切换时会直接进行单位换算)

dp适配和px适配是一样的只是用dp的倍数来进行适配

